<h4>What is assembly?<h4><br>
This web application is an assembly simulator. Now what is assembly? <br>
Assembly is a low-level computer programming language that is almost <br>
directly understood by your computer's processor. Assembly language <br>
generally comes in the form of a fixed set of instructions that are<br>
mapped to a set of machine code instructions that the processor <br>
understands.<br>
<br>
One of the biggest differences between assembly and other high-level<br>
programming is that each assembly language is unique to the computer <br>
it runs on. This means that there are numerous types of assembly each<br>
of varying complexity. What ASM Simulator seeks to do is provide a<br>
simple version of assembly to teach the user operations that are<br>
found in most assembly languages as well as how the assembly language<br>
interacts with the hardware.<br>
<br>
<h4>Hardware Overview:<h4><br>
This simulator uses a 16 bit Instruction Set Architecture(ISA). <br>
To summarise, an ISA is the architecture of a computer that covers <br>
the hardware that enables users to program. This hardware includes: <br>
registers, memory architecture, and instruction set. More complex <br>
ISA's cover exception handling and interrupts and more. For teaching <br>
purposes our ISA will only cover the first three components mentioned.<br>
<br>
All ISA's have their own instruction set and ours is detailed in the <br>
editor references. Our ISA is a 16-bit ISA, this means that the <br>
registers and memory locations store values that are 16 bits. The <br>
address range spans from 0x0 to 0x512.<br>
<br>
